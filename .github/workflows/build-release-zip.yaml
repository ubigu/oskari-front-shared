name: Build and release tag

on:
  push:
    tags:
      - "*"

permissions:
  contents: write

jobs:
  build-dist-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
      - name: 'Force tag to package version'
        run: npm version ${{ github.ref_name }} || echo "Version already correct"

# Create a gzip file containing the built frontend
      - name: 'Build production Inventory Image'
        run: |
          docker build . --target buildimage --tag tre-oskari-${{ github.ref_name }}-prod --build-arg BUILD_TARGET=build
      - name: 'Build test Inventory Image'
        run: |
          docker build . --target buildimage --tag tre-oskari-${{ github.ref_name }}-test --build-arg BUILD_TARGET=build:test
      - name: 'Extract production gzip'
        run: |
          id=$(docker create tre-oskari-${{ github.ref_name }}-prod)
          docker cp $id:/opt/oskari/dist - | gzip > oskari-frontend-${{ github.ref_name }}-prod.tar.gz
          docker rm -v $id
      - name: 'Extract test gzip'
        run: |
          id=$(docker create tre-oskari-${{ github.ref_name }}-test)
          docker cp $id:/opt/oskari/dist - | gzip > oskari-frontend-${{ github.ref_name }}-test.tar.gz
          docker rm -v $id
      - name: "Release zipped images"
        uses: softprops/action-gh-release@v2
        with:
          files: |
            oskari-frontend-${{ github.ref_name }}-prod.tar.gz
            oskari-frontend-${{ github.ref_name }}-test.tar.gz

## Release also a nginx image
#      - name: 'Login to GitHub Container Registry'
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{github.actor}}
#          password: ${{secrets.GITHUB_TOKEN}}
#
#      - name: Extract metadata (tags, labels) for Docker
#        id: meta
#        uses: docker/metadata-action@v5
#        with:
#          images: ghcr.io/${{ github.repository }}
#
#      - name: Build and push Docker image
#        id: push
#        uses: docker/build-push-action@v6
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#
